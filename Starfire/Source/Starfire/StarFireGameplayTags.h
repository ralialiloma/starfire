#pragma once
#include "NativeGameplayTags.h"

namespace Sf_GameplayTags 
{
	STARFIRE_API FGameplayTag FindTagByString(const FString& TagString, bool bMatchPartialString = false);
	STARFIRE_API TArray<FGameplayTag> GetAllChildTags(const FGameplayTag& ParentTag);

	namespace Tutorial
	{
		STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);

		namespace State
		{
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(End);
		}
	}
	namespace Gameplay
	{
		STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
		namespace ActionLogger
		{
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
			namespace PortalSystem
			{
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
				namespace Pillar
				{
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Break);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Restore);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(RestoreProgress);
				}
			}
			namespace FP
			{
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
				namespace Movement
				{
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Jump);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Land);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Dash);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Mantle);
					namespace Sprint
					{
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Start);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(End);
					}
					namespace WallRun
					{
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Start);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Jump);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(End);
					}
				}
				namespace Equipment
				{
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
					namespace Rifle
					{
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
						namespace Fire
						{
							STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
							STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Start);
							STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Empty);
							STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(End);
							STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Kill);
							STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Damage);
						}
						namespace Reload
						{
							STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
							STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Start);
							STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(End);
							STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Complete);
						}
					}
					namespace Grenade
					{
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Craft);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Explode);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Kill);
						namespace Throw
						{
							STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
							STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Start);
							STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(End);
						}
					}
					namespace Scan
					{
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
					}
				}
			}
			namespace Resources
			{
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);

				namespace Crystal
				{
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Collect);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Break);
				}
				namespace PowerCore
				{
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Collect);
				}
			}
			namespace Tutorial
			{
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(GrenadeUI);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(PillarRun);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(PillarUI);
			}
			namespace TP
			{
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Kill);
			}
		}
		namespace PatrolAreaMarkerTypes
		{
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Peak);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Roam);
			namespace Cover
			{
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Low);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(High);
			}
		}
		namespace DamageType
		{
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(FirePlayer);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(FireEnemy);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Melee);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Explosion);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Environment);
		}
		namespace PlayState
		{
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Start);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Tutorial);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Arena);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(End);
		}
		namespace Resource
		{
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Environment);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(ObjectiveItem);
		}
		namespace Weapon
		{
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
			namespace Action
			{
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(ActivateWeapon);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(AddWeapon);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(RemoveWeapon);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(EquipWeapon);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(UnequipWeapon);
			}
		}
	}
	namespace Debug
	{
		STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
		STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Sound);
		namespace TP
		{
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Controller);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Pawn);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(MoveTargetLocation);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(DynamicMoveTarget);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(RandomRoamLocation);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(MeleeRangeCheck);
			namespace PatrolArea
			{
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(PatrolMarker);
			}
			
			namespace EQS
			{
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Scheduler);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(CoverLocation);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(PeakLocation);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(TetherPointGen);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(CloseToPlayerLocations);
			}

			namespace CharacterFeatures
			{
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Combat);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Cover);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Locomotion);
			}
		}
		namespace FP
		{
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
			namespace Movement
			{
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Mantle);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Wallrun);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Dash);
			}
			namespace HSM
			{
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
			}
		}
		namespace Weapon
		{
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(FireBlocks);
		}
		namespace Interactables
		{
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
		}
		namespace Inventory
        {
        	STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
        }
		namespace Core
		{
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameState);
		}
		namespace Spawning
		{
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Resources);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemies);
		}


	}
	namespace Animation
	{
		STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
		namespace AnimNotify
		{
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(ThrowKnife);
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(HitMelee);
		}
		namespace Weapon
		{
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);

			namespace Montage
			{
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Fire);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Melee);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Reload);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Aim);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Equip);
			}
			namespace Event
			{
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Fire);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Reload);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Aim);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Equip);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Melee);
			}	
		}
		namespace Character
		{
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
			namespace TP
			{
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
				namespace Montage
				{
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Fire);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Melee);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Reload);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Aim);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Equip);
				}
				namespace Blendspace
				{
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Walk);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Crouch);
				}
				namespace AnimSequence
				{
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
					namespace UpperBody
					{
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Idle);
					}
					namespace LowerBody
					{
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Rotate);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Idle);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(IdleCrouch);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(StandToCrouch);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(CrouchToStand);
					}
					namespace FullBody
					{
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Death);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Hit);
					}
				}
			}
			namespace FP
			{
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
				namespace Montage
				{
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Fire);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Melee);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Reload);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Equip);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Unequip);
				}
				namespace Blendspace
				{
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Walk);
				}
				namespace AnimSequence
				{
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Idle);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Jump);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Falling);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Land);
				}
			}
		}
	}
	namespace Effects
	{
		STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);

		namespace FX
		{
			namespace SoundsFX
			{
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
				namespace FP
				{
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Respawn);
					namespace Movement
					{
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Jump);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Footstep);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Dash);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Mantle);
						namespace WallRun
						{
							STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
							STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Start);
							STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Step);
						}
					}
					namespace Equipment
					{
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
						namespace Rifle
						{
							STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
							STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Fire);
							namespace Reload
							{
								STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
								namespace SafetyLock
								{
									STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
									STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Open);
									STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Close);
								}
								namespace AmmoPack
								{
									STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
									STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(RemoveFromShaft);
									STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(FailedAttemtToAddToShaft);
									STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(AddToShaft);
								}
							}
						}
						namespace Grenade
						{
							STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
							STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Contact);
						}
					}
				}
			}
			namespace VisualFX
			{
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
			
			}
		}
		namespace Messages
		{
			STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
			namespace PortalSystem
			{
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
				namespace Pillar
				{
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Break);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Restore);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(RestoreProgress);
					namespace Move
					{
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Up);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Down);
					}
				}
				namespace Portal
				{
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
				}
			}
			namespace TP
			{
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Death);
				namespace Equipment
				{
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
					namespace Rifle
					{
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Melee);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Fire);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Reload);
					}
				}
				namespace Movement
				{
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
					namespace Step
					{
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Walk);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Sprint);
					}
				}
			}
			namespace Resources
			{
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
				namespace Crystal
				{
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Break);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Pickup);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Full);
				}
				namespace PowerCore
				{
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Pickup);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Full);
				}
				namespace Grenade
				{
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Craft);
				}
			}
			namespace FP
			{
				STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Respawn);
				namespace Health
				{
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Low);
					namespace Heal
					{
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Start);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Full);
					}
				}
				namespace Movement
				{
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Jump);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Land);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Footstep);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Dash);
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Mantle);
					namespace WallRun
					{
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Start);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Step);
					}
				}
				namespace Equipment
				{
					STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
					namespace Rifle
					{
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(EmptyClipFireAttempt);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Melee);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Fire);
						namespace HitTarget
						{
							STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
							STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Pillar);
						}
						namespace Reload
						{
							STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
							namespace SafetyLock
							{
								STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
								STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Open);
								STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Close);
							}
							namespace AmmoPack
							{
								STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
								STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(RemoveFromShaft);
								STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(FailedAttemtToAddToShaft);
								STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(AddToShaft);
							}
						}
					}
					namespace Grenade
					{
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Name);
						STARFIRE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Contact);
					}
				}
			}
		}
	}
}
